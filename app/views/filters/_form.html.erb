<h1>Add New Filter</h1>
<%= form_for(@filter) do |f| %>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10">
    <%= f.label :name, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.text_field :name, class: "form-control", required: true  %>
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10">
    <%= f.label :family, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.select :family,options_for_select(Filter::FAMILY), class: "form-control"%><br />
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10">
    <%= f.label :segment, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.select :segment,options_for_select(Filter::SEGMENT_FINDER["blank"]), class: "form-control"%>
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id ="filter_operator_id">
    <%= f.label :operator, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.select :operator,options_for_select(Filter::RELATION_OPERATOR), class: "form-control" %><br />
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id ="filter_list_type_id">
    <%= f.label :list_type, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.select :list_type,options_for_select(Filter::LIST_KEYS.invert.to_a),{id: 'filter_list_type', class: "form-control"}%>
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id="filter_condition_id" >
    <%= f.label :condition, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.select :condition, options_for_select(Filter::KEY_OPERATORS["blank"]), { id: 'filter_condition', class: "form-control" } %><br />
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id="free_text_field" style="display:none;">
    <%= f.label :free_text, class: "col-sm-2 control-label" %>
    <div class="col-sm-8 controls">
      <%= f.text_field :free_text, class: "form-control" %><br />
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id="start_date_field" style="display:none;">
    <%= f.label :start_date, class: "col-sm-2 control-label" %>
      <div class="col-sm-6 controls">
        <div class='input-group date' >
        <%= f.text_field :start_date, class: "form-control",id: 'start_datetime'  %>
        <span class="input-group-addon">
          <span class="glyphicon glyphicon-calendar"></span>
        </span>
      </div>
    </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10" id="end_date_field" style="display:none;">
    <%= f.label :end_date, class: "col-sm-2 control-label" %>
    <div class="col-sm-6 controls">
      <div class='input-group date' >
        <%= f.text_field :end_date, class: "form-control",id: 'end_datetime'  %>
        <span class="input-group-addon">
          <span class="glyphicon glyphicon-calendar"></span>
        </span>
        </div>
      </div>
  </div>
  <div class="form-group control-group belongs_to_association_type user_field col-sm-10">
    <div class="col-sm-2"></div> 
    <div class="col-sm-8"><%= f.submit class: "btn btn-primary" %></div>
  </div>
<% end %>

<script type="text/javascript">
$(function() {
  return $(document).on('change', '#filter_list_type', function(evt) {
    return $.ajax({
      url: '/filters/get_list',
      type: 'GET',
      dataType: 'script',
      data: {
        list_type: $("#filter_list_type option:selected").val()
      },
      error: function(jqXHR, textStatus, errorThrown) {
        return console.log("AJAX Error: " + textStatus);
      },
      success: function(data, textStatus, jqXHR) {
        return console.log("Dynamic List select OK!");
      }
    });
  });
});
$(function() {
  return $(document).on('change', '#filter_family', function(evt) {
    return $.ajax({
      url: '/filters/get_segments',
      type: 'GET',
      dataType: 'script',
      data: {
        list_type: $("#filter_family option:selected").val()
      },
      error: function(jqXHR, textStatus, errorThrown) {
        return console.log("AJAX Error: " + textStatus);
      },
      success: function(data, textStatus, jqXHR) {
        return console.log("Dynamic List select OK!");
      }
    });
  });
});
$(function() {
  return $(document).on('change', '#filter_segment', function(evt) {
    var list_val = $("#filter_segment option:selected").val()
    switch (list_val) {
    case "categories":
        list_type = "category_list";
        break;
    case "downloaded_the_app":
        list_type = "recency_list";
        break;
     case "upgraded_the_app":
        list_type = "recency_list";
        break;
    case "feeling_score":
        list_type = "feeling_score_list";
        break;
    case "average_feeling_score":
        list_type = "feeling_score_list";
        break; 
    case"impact_score":
        list_type = "impact_score_list";
        break;
    case"average_impact_score":
        list_type = "impact_score_list";
        break;
    case "well_being_score":
        list_type = "well_being_score_list";
        break;
    case "average_well_being_score":
        list_type = "well_being_score_list";
        break;
    case "weather_condition":
        list_type = "weather_condition_list";
        break;
    case "about_to_expire":
        list_type = "future_date_list";
        break;
    case "subscribed_alteast_once" :
        list_type = "purchase_list";
        break;
    case "active_subscription":
        list_type = "purchase_list";
        break;
    case "havent_subscribed":
        list_type = "purchase_list";
        break;
    case "created_notes_during_time_period":
        list_type = "pre_defined_time_period";
        break;
    case "recorded_daily_activity_during_time_period":
        list_type = "pre_defined_time_period";
        break;
    case "recorded_daily_activity":
        list_type = "recorded_activity";
        break;
    case "recorded_avg_daily_activity":
        list_type = "record_activity_list";
        break;
    case "used_app_version":
        list_type = "version_list";
        break;
    case "notes_in_currently_used_version":
        list_type = "version_list";
        break;
    case "primary_location":
        list_type = "regions";
        break;
    case "notes_with_topics_frequency":
        list_type = "occurence_of_each_topic_list";
        break;
    case "suburb_visited":
        list_type = "suburb_visit_recency";
        break;
    default: 
        list_type = "recency_list";
        break;
  }
    console.log(list_val)
    return $.ajax({
      url: '/filters/get_collective_list',
      type: 'GET',
      dataType: 'script',
      data: {
        list_type: list_type //$("#filter_list_type option:selected").val()
      },
      error: function(jqXHR, textStatus, errorThrown) {
        return console.log("AJAX Error: " + textStatus);
      },
      success: function(data, textStatus, jqXHR) {
        return console.log("Dynamic collective_list select OK!");
      }
    });
  });
});

$(document).ready(function(){
  $('#filter_segment').on('change', function() {
    if (this.value == 'downloaded_the_app' ||
        this.value == 'upgraded_the_app' ||
        this.value == 'last_note_created' ||
        this.value == 'feeling_score' ||
        this.value == 'impact_score' ||
        this.value == 'notes_with_same_weather_condition' ||
        this.value == 'well_being_score' ||
        this.value == 'expired_subscription' ||
        this.value == 'suburb_visited')
      {
        $("#free_text_field").hide();
        $("#filter_list_type_id").show();
        $("#filter_condition_id").show();
        $("#filter_operator_id").show();
        $("#start_date_field").hide();
        $("#end_date_field").hide();
      }
    else if (this.value == 'subscribed_alteast_once' ||
            this.value == 'active_subscription' ||
            this.value == 'havent_subscribed')
      {
        $("#free_text_field").hide();
        $("#filter_list_type_id").show();
        $("#filter_condition_id").show();
        $("#filter_operator_id").hide();
        $("#start_date_field").hide();
        $("#end_date_field").hide();
      }
    else if (this.value == 'total_notes' || this.value == 'steps' || this.value == 'suburb_visited_frequency' ||
        this.value == 'process_wbs_standard_deviation')
      {
        $("#free_text_field").show();
        $("#filter_list_type_id").hide();
        $("#filter_condition_id").hide();
        $("#start_date_field").hide();
        $("#end_date_field").hide();
      }
    else if (this.value == 'weather_condition' || this.value == 'categories' ||
        this.value == 'about_to_expire' || this.value == "used_app_version" || this.value == "primary_location")
    {
      $("#free_text_field").hide();
      $("#filter_operator_id").hide();
      $("#filter_list_type_id").show();
      $("#filter_condition_id").show();
      $("#start_date_field").hide();
      $("#end_date_field").hide();
    }

    else if (this.value == 'users_with_account' || this.value == 'users_without_account')
      {
        $("#free_text_field").hide();
        $("#filter_list_type_id").hide();
        $("#filter_condition_id").hide();
        $("#filter_operator_id").hide();
        $("#start_date_field").hide();
        $("#end_date_field").hide();
      }
    else if (this.value == 'notes_with_topics' || this.value == 'specific_users')
    {
      $("#free_text_field").show();
      $("#filter_list_type_id").hide();
      $("#filter_condition_id").hide();
      $("#filter_operator_id").hide();
      $("#start_date_field").hide();
      $("#end_date_field").hide();
    }
    else if (
        this.value == 'average_feeling_score' ||
        this.value == 'average_impact_score' ||
        this.value == 'average_well_being_score')
      {
        $("#free_text_field").show();
        $("#filter_list_type_id").hide();
        $("#filter_condition_id").hide();
        $("#filter_operator_id").show();
        $("#start_date_field").hide();
        $("#end_date_field").hide();
      }
    else if (this.value == 'created_notes_during_time_period_date' || this.value == 'recorded_daily_activity_during_time_period_date' || this.value == 'recorded_avg_activity_greater_date' 
      || this.value == 'recorded_avg_activity_lesser_date' || this.value == 'recorded_avg_activity_equal_date')
    {
      $("#start_date_field").show();
      $("#end_date_field").show();
      $("#filter_list_type_id").hide();
      $("#filter_condition_id").hide();
      $("#filter_operator_id").hide();
    }
   else if (this.value == 'created_notes_during_time_period' || this.value == 'recorded_daily_activity_during_time_period')
    {
      $("#free_text_field").hide();
      $("#filter_list_type_id").show();
      $("#filter_condition_id").show();
      $("#filter_operator_id").hide();
      $("#start_date_field").hide();
      $("#end_date_field").hide();
    }
    else if (this.value == 'recorded_daily_activity' || this.value == 'recorded_avg_daily_activity')
    {
      $("#free_text_field").hide();
      $("#filter_list_type_id").show();
      $("#filter_condition_id").show();
      $("#filter_operator_id").show();
      $("#start_date_field").hide();
      $("#end_date_field").hide();
    }
     else if (this.value == 'notes_with_topics_frequency')
    {
      $("#free_text_field").show();
      $("#filter_list_type_id").show();
      $("#filter_condition_id").show();
      $("#filter_operator_id").show();
      $("#start_date_field").hide();
      $("#end_date_field").hide();
    }
  });

    $(function () {
      $('#start_datetime').datetimepicker({
        format: 'L'
      });
      $('#end_datetime').datetimepicker({
        format: 'L'
      });
  });
});

</script>